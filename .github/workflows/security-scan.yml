name: Security Scan

# Trigger workflow on push/PR to main branches and weekly schedule
on:
  push:
    branches: 
      - main
      - develop
    paths:
      - 'src/**'
      - 'infrastructure/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'src/**'
      - 'infrastructure/**'
  schedule:
    - cron: '0 0 * * 0' # Weekly on Sunday at midnight

# Environment variables
env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TRIVY_NO_PROGRESS: 'true'
  TRIVY_EXIT_CODE: '1'

jobs:
  # CodeQL Analysis for JavaScript/TypeScript
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      matrix:
        language: ['javascript', 'typescript']

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality
          config-file: ./.github/codeql/codeql-config.yml
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"

  # Dependency Scanning
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    needs: codeql-analysis

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Snyk
        uses: snyk/actions/setup@v1.2.0

      # Backend dependencies scan
      - name: Scan Backend Dependencies
        working-directory: src/backend
        run: |
          npm ci
          snyk test --severity-threshold=high --all-projects
          snyk monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Frontend dependencies scan
      - name: Scan Frontend Dependencies
        working-directory: src/web
        run: |
          npm ci
          snyk test --severity-threshold=high
          snyk monitor
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Container Security Scanning
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    needs: dependency-scan

    strategy:
      matrix:
        service: [
          'api-gateway',
          'auth-service',
          'location-service',
          'marketplace-service',
          'messaging-service',
          'payment-service',
          'web'
        ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.10.0
        with:
          image-ref: 'egyptian-map-pi/${{ matrix.service }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          vuln-type: 'os,library'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'container-${{ matrix.service }}'

  # Security Report Generation
  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [codeql-analysis, dependency-scan, container-scan]
    if: always()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Scan Results
        uses: actions/download-artifact@v3
        with:
          path: security-results

      - name: Generate Security Report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "## Scan Summary" >> security-report.md
          echo "- CodeQL Analysis: ${{ needs.codeql-analysis.result }}" >> security-report.md
          echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> security-report.md
          echo "- Container Scan: ${{ needs.container-scan.result }}" >> security-report.md

      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md
          retention-days: 30

  # Compliance Check
  compliance-check:
    name: Compliance Validation
    runs-on: ubuntu-latest
    needs: security-report

    steps:
      - name: Verify Egyptian Data Protection Laws
        run: |
          echo "Verifying compliance with Egyptian data protection requirements..."
          # Add specific compliance checks here

      - name: Verify Pi Network Standards
        run: |
          echo "Verifying compliance with Pi Network security standards..."
          # Add Pi Network specific compliance checks here

      - name: Send Compliance Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: compliance-report
          path: compliance-report.md
          retention-days: 30