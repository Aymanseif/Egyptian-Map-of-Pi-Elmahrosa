{
  "root": true,
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "react"
  ],
  "settings": {
    "react": {
      "version": "18.2"
    }
  },
  "rules": {
    // React specific rules
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react/jsx-curly-brace-presence": ["error", { "props": "never", "children": "never" }],
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-pascal-case": "error",
    
    // TypeScript specific rules
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/no-floating-promises": "error",
    
    // General code quality rules
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "prefer-const": "error",
    "eqeqeq": ["error", "always"],
    "curly": ["error", "all"],
    "no-var": "error",
    "object-shorthand": ["error", "always"],
    "quotes": ["error", "single", { "avoidEscape": true }],
    "semi": ["error", "always"],
    "no-duplicate-imports": "error",
    "no-unused-expressions": "error",
    "no-shadow": "error",
    "no-return-await": "error",
    "no-throw-literal": "error",
    
    // Mobile-first and PWA specific rules
    "no-restricted-globals": ["error", "event"],
    "max-lines": ["warn", { "max": 300, "skipBlankLines": true, "skipComments": true }],
    "max-depth": ["error", 4],
    "complexity": ["warn", 15]
  },
  "env": {
    "browser": true,
    "es2022": true,
    "node": true,
    "jest": true
  },
  "globals": {
    "process": "readonly",
    "window": "readonly",
    "document": "readonly",
    "navigator": "readonly"
  },
  "ignorePatterns": [
    "node_modules/",
    ".next/",
    "out/",
    "public/",
    "**/*.test.ts",
    "**/*.test.tsx",
    "jest.config.ts",
    "next.config.js"
  ]
}