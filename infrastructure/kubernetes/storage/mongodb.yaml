# MongoDB Kubernetes Deployment Manifest
# Version: MongoDB 6.0
# Kubernetes: 1.27+
# Description: Production-grade MongoDB deployment with sharding, replication and high availability

apiVersion: v1
kind: List
items:
# MongoDB StatefulSet
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: mongodb
    namespace: app
    labels:
      app: mongodb
      part-of: egyptian-map-pi
      tier: database
  spec:
    serviceName: mongodb-headless
    replicas: 3  # 3 replicas for high availability
    selector:
      matchLabels:
        app: mongodb
    template:
      metadata:
        labels:
          app: mongodb
          tier: database
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9216"
      spec:
        # Pod anti-affinity to ensure high availability across zones
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - mongodb
              topologyKey: topology.kubernetes.io/zone
        
        # Security context for MongoDB container
        securityContext:
          fsGroup: 999
          runAsUser: 999
          runAsNonRoot: true
        
        # Init container to handle initialization tasks
        initContainers:
        - name: init-mongodb
          image: busybox:1.36
          command:
          - sh
          - -c
          - |
            test -f /data/db/.initialized || touch /data/db/.initialized
            chown -R 999:999 /data/db
          volumeMounts:
          - name: mongodb-data
            mountPath: /data/db
          securityContext:
            runAsUser: 0
        
        # Main MongoDB container
        containers:
        - name: mongodb
          image: mongo:6.0
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 27017
            name: mongodb
          - containerPort: 9216
            name: metrics
          
          # Environment variables
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: "root"
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodb-secrets
                key: mongodb-root-password
          - name: MONGODB_REPLICA_SET_NAME
            value: "rs0"
          - name: MONGODB_REPLICA_SET_KEY
            valueFrom:
              secretKeyRef:
                name: mongodb-secrets
                key: mongodb-keyfile
          
          # Resource limits and requests
          resources:
            requests:
              memory: "2Gi"
              cpu: "500m"
            limits:
              memory: "4Gi"
              cpu: "1000m"
          
          # Volume mounts
          volumeMounts:
          - name: mongodb-data
            mountPath: /data/db
          - name: mongodb-config
            mountPath: /config
          - name: mongodb-keyfile
            mountPath: /keyfile
            subPath: keyfile
          
          # Liveness probe
          livenessProbe:
            exec:
              command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          # Readiness probe
          readinessProbe:
            exec:
              command:
              - mongo
              - --eval
              - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          
          # Lifecycle hooks
          lifecycle:
            preStop:
              exec:
                command: ["/usr/bin/mongod", "--shutdown"]
        
        # Volumes
        volumes:
        - name: mongodb-config
          configMap:
            name: mongodb-config
        - name: mongodb-keyfile
          secret:
            secretName: mongodb-secrets
            defaultMode: 0400
            items:
            - key: mongodb-keyfile
              path: keyfile
    
    # Volume claim templates for persistent storage
    volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: ebs-gp3
        resources:
          requests:
            storage: 50Gi

# Headless Service for MongoDB StatefulSet
- apiVersion: v1
  kind: Service
  metadata:
    name: mongodb-headless
    namespace: app
    labels:
      app: mongodb
      part-of: egyptian-map-pi
      tier: database
  spec:
    clusterIP: None
    publishNotReadyAddresses: true
    ports:
    - port: 27017
      targetPort: mongodb
      name: mongodb
    - port: 9216
      targetPort: metrics
      name: metrics
    selector:
      app: mongodb

# Regular Service for MongoDB client access
- apiVersion: v1
  kind: Service
  metadata:
    name: mongodb
    namespace: app
    labels:
      app: mongodb
      part-of: egyptian-map-pi
      tier: database
  spec:
    type: ClusterIP
    ports:
    - port: 27017
      targetPort: mongodb
      name: mongodb
    selector:
      app: mongodb